Open file in Visual Studio Code:
    open -a /Applications/Visual\ Studio\ Code.app <FileName>

git init
git add .
git commit -m "____"
git status
git log

Remove from Staging:
    git rm --cached -r .

Tracking difference between old file and new file
    git diff <file Name>

Restoring old file over new changes
    git checkout <file Name>

Add remote address
    git remote add origin <address>

Push to that remote address
    git push -u origin main

checking names of all branches
    git branch
create new branch
    git branch <branch Name>
switching to another branch 
    git checkout <branch Name>

creating and switching the branch at same time 
    git checkout -b <branch name>

to merge A to B, switch to B, then:
    git merge A<branch Name>

Push these to remote, pushing 'origin' to 'main' branch
    git push origin main

Move 'head' to the parent(s) of main or HEAD itself:
    git checkout main^/HEAD^
    git checkout main^^/HEAD^^
    git checkout main~2/HEAD~2

To forcefully move 'main' to 3 parent back:
    git branch -f main HEAD~3
    Note: Not allowed for current branch
Move current branch anywhere onto any commit:
    git branch -f main <commitID>
    (Your Head and Main with move onto that commit)
Move a branch 'secondBranch' just above the HEAD:
    git branch -f secondBranch HEAD~1

Local Reseting:
    git reset HEAD~1
Remote Reseting:
    git revert HEAD~1
Cherry-Picking: choose any copy of commit to proceed the HEAD
    git cherry-pick <commit1> <commit2> <commit3>
But, if Not knowing Hash of commits, Use rebase
    git rebase -i HEAD~4
